"use strict";(self.webpackChunkuse_state_machine=self.webpackChunkuse_state_machine||[]).push([[207],{1203:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var a=t(2122),s=t(9756),o=(t(7294),t(3905)),i=["components"],r={sidebar_position:2,title:"API"},p="API",l={unversionedId:"api",id:"api",isDocsHomePage:!1,title:"API",description:"`ts",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",editUrl:"https://github.com/cassiozen/useStateMachine/edit/main/docs/docs/api.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"API"},sidebar:"defaultSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Upgrading from 0.x.x",permalink:"/docs/upgrading-from-0xx"}},c=[{value:"state",id:"state",children:[]},{value:"Send events",id:"send-events",children:[]},{value:"State Machine definition",id:"state-machine-definition",children:[]},{value:"Defining States",id:"defining-states",children:[{value:"On (Events &amp; transitions)",id:"on-events--transitions",children:[]},{value:"Effects (entry/exit callbacks)",id:"effects-entryexit-callbacks",children:[]}]},{value:"Extended state (context)",id:"extended-state-context",children:[]},{value:"Schema: Context &amp; Event Typing",id:"schema-context--event-typing",children:[]}],d={toc:c};function m(e){var n=e.components,t=(0,s.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api"},"API"),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"state"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},"useStateMachine"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#C2C3C5"}},"/* State Machine Definition */"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},");"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"state"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},"useStateMachine"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#616E88"}},"/* State Machine Definition */"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useStateMachine")," takes a JavaScript object as the state machine definition. It returns an array consisting of a ",(0,o.kt)("inlineCode",{parentName:"p"},"current machine state")," object and a ",(0,o.kt)("inlineCode",{parentName:"p"},"send")," function to trigger transitions."),(0,o.kt)("h2",{id:"state"},"state"),(0,o.kt)("p",null,"The machine's ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," consists of 4 properties: ",(0,o.kt)("inlineCode",{parentName:"p"},"value"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"event"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"nextEvents")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"context"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"value")," (string): Returns the name of the current state."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"event")," (",(0,o.kt)("inlineCode",{parentName:"p"},"{type: string}"),"; Optional): The name of the last sent event that led to this state."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nextEvents")," (",(0,o.kt)("inlineCode",{parentName:"p"},"string[]"),"): An array with the names of available events to trigger transitions from this state."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"context"),': The state machine extended state. See "Extended State" below.'),(0,o.kt)("h2",{id:"send-events"},"Send events"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"send"),' takes an event as argument, provided in shorthand string format (e.g. "TOGGLE") or as an event object (e.g. ',(0,o.kt)("inlineCode",{parentName:"p"},'{ type: "TOGGLE" }'),")"),(0,o.kt)("p",null,"If the current state accepts this event, and it is allowed (see guard), it will change the state machine state and execute effects."),(0,o.kt)("p",null,"You can also send additional data with your event using the object notation (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'{ type: "UPDATE" value: 10 }'),"). Check ",(0,o.kt)("a",{parentName:"p",href:"#schema-context--event-typing"},"schema")," for more information about strong typing the additional data."),(0,o.kt)("h2",{id:"state-machine-definition"},"State Machine definition"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Key"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"verbose"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"If true, will log every context & state changes. Log messages will be stripped out in the production build.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"schema"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"For usage with TypeScript only. Optional strongly-typed context & events. More on schema ",(0,o.kt)("a",{parentName:"td",href:"#schema-context--event-typing"},"below"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"context"),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Context is the machine's extended state. More on extended state ",(0,o.kt)("a",{parentName:"td",href:"#extended-state-context"},"below"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"initial"),(0,o.kt)("td",{parentName:"tr",align:null},"*"),(0,o.kt)("td",{parentName:"tr",align:null},"The initial state node this machine should be in")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"states"),(0,o.kt)("td",{parentName:"tr",align:null},"*"),(0,o.kt)("td",{parentName:"tr",align:null},"Define the possible finite states the state machine can be in.")))),(0,o.kt)("h2",{id:"defining-states"},"Defining States"),(0,o.kt)("p",null,"A finite state machine can be in only one of a finite number of states at any given time. As an application is interacted with, events cause it to change state."),(0,o.kt)("p",null,"States are defined with the state name as a key and an object with two possible keys: ",(0,o.kt)("inlineCode",{parentName:"p"},"on")," (which events this state responds to) and ",(0,o.kt)("inlineCode",{parentName:"p"},"effect")," (run arbitrary code when entering or exiting this state):"),(0,o.kt)("h3",{id:"on-events--transitions"},"On (Events & transitions)"),(0,o.kt)("p",null,"Describes which events this state responds to (and to which other state the machine should transition to when this event is sent):"),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "active";\n    context: undefined;\n    event: Machine.EntryEventForStateValue<{\n        initial: "active";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, "active">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>(definition: A.InferNarrowestObject<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: {\n        on: {\n            TOGGLE: "active";\n        };\n    };\n    active: {\n        on: {\n            TOGGLE: "inactive";\n        };\n    };\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<{\n    on: {\n        TOGGLE: "active";\n    };\n}>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on: A.InferNarrowestObject<{\n    TOGGLE: "active";\n}>'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "active"'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<{\n    on: {\n        TOGGLE: "inactive";\n    };\n}>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on: A.InferNarrowestObject<{\n    TOGGLE: "inactive";\n}>'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive"'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"})"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "active";\n    context: undefined;\n    event: Machine.EntryEventForStateValue<{\n        initial: "active";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, "active">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>(definition: A.InferNarrowestObject<{\n    initial: "active";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: {\n        on: {\n            TOGGLE: "active";\n        };\n    };\n    active: {\n        on: {\n            TOGGLE: "inactive";\n        };\n    };\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<{\n    on: {\n        TOGGLE: "active";\n    };\n}>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on: A.InferNarrowestObject<{\n    TOGGLE: "active";\n}>'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "active"'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<{\n    on: {\n        TOGGLE: "inactive";\n    };\n}>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on: A.InferNarrowestObject<{\n    TOGGLE: "inactive";\n}>'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive"'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")")))))),(0,o.kt)("p",null,"The event definition can also use the extended, object syntax, which allows for more control over the transition (like adding guards):"),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"on: {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  TOGGLE: {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    target: "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"};"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"on"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  TOGGLE"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    target"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("h4",{id:"guards"},"Guards"),(0,o.kt)("p",null,"Guards are functions that run before actually making the state transition: If the guard returns false the transition will be denied."),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: undefined;\n    event: Machine.EntryEventForStateValue<{\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: {\n                        target: "active";\n                        guard: unknown;\n                    };\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, {\n    inactive: {\n        on: {\n            TOGGLE: {\n                target: "active";\n                guard: unknown;\n            };\n        };\n    };\n    active: {\n        ...;\n    };\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: {\n                        target: "active";\n                        guard: unknown;\n                    };\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, ["states", "inactive"]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "inactive", "on"], {\n    TOGGLE: {\n        target: "active";\n        guard: unknown;\n    };\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"          ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) target: "inactive" | "active"'},"target")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"          "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) guard?: ((parameter: {\n    context: undefined;\n    event: {\n        type: "TOGGLE";\n    };\n}) => boolean) | undefined'},"guard")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"var context: undefined"},"context"),", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: {\n    type: "TOGGLE";\n}'},"event")," }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"            "),(0,o.kt)("span",{parentName:"div",style:{color:"#C2C3C5"}},"// Return a boolean to allow or block the transition")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"            "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"return"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"false"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"          },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "active", "on"], {\n    TOGGLE: "inactive";\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: undefined;\n    event: Machine.EntryEventForStateValue<{\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: {\n                        target: "active";\n                        guard: unknown;\n                    };\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, {\n    inactive: {\n        on: {\n            TOGGLE: {\n                target: "active";\n                guard: unknown;\n            };\n        };\n    };\n    active: {\n        ...;\n    };\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: {\n                        target: "active";\n                        guard: unknown;\n                    };\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n            };\n        };\n    }, ["states", "inactive"]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "inactive", "on"], {\n    TOGGLE: {\n        target: "active";\n        guard: unknown;\n    };\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"          "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) target: "inactive" | "active"'},"target")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"          "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) guard?: ((parameter: {\n    context: undefined;\n    event: {\n        type: "TOGGLE";\n    };\n}) => boolean) | undefined'},"guard")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var context: undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: {\n    type: "TOGGLE";\n}'},"event")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"            "),(0,o.kt)("span",{parentName:"div",style:{color:"#616E88"}},"// Return a boolean to allow or block the transition")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"            "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"return"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"false;")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"          "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: {\n                    target: "active";\n                    guard: unknown;\n                };\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n        };\n    };\n}, ["states", "active", "on"], {\n    TOGGLE: "inactive";\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("p",null,"The guard function receives an object with the current context and the event. The event parameter always uses the object format (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"{ type: 'TOGGLE' }"),")."),(0,o.kt)("h3",{id:"effects-entryexit-callbacks"},"Effects (entry/exit callbacks)"),(0,o.kt)("p",null,"Effects are triggered when the state machine enters a given state. If you return a function from your effect, it will be invoked when leaving that state (similarly to how useEffect works in React)."),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "active";\n    context: undefined;\n    event: {\n        type: "$$initial";\n    };\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    value: "inactive";\n    context: undefined;\n    event: {\n        type: "TOGGLE";\n    };\n    nextEventsT: never[];\n    nextEvents: "TOGGLE"[];\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, {\n    active: {\n        on: {\n            TOGGLE: "inactive";\n        };\n        effect: unknown;\n    };\n    inactive: {};\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "active" | "inactive"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    active: Machine.Definition.StateNode<{\n        initial: "active";\n        states: {\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n            inactive: {};\n        };\n    }, ["states", "active"]>;\n    inactive: Machine.Definition.StateNode<{\n        initial: "active";\n        states: {\n            ...;\n        };\n    }, [...]>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active", "on"], {\n    TOGGLE: "inactive";\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "active" | "inactive" | A.InferNarrowestObject<{\n    target: "active" | "inactive";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active", "effect"], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var send: Machine.Send<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"send"),", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"setContext"),", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: {\n    type: "$$initial";\n}'},"event"),", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"var context: undefined"},"context")," }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'Just entered the Active state'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"return"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," () "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'Just Left the Active state'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "active";\n    context: undefined;\n    event: {\n        type: "$$initial";\n    };\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    value: "inactive";\n    context: undefined;\n    event: {\n        type: "TOGGLE";\n    };\n    nextEventsT: never[];\n    nextEvents: "TOGGLE"[];\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, {\n    active: {\n        on: {\n            TOGGLE: "inactive";\n        };\n        effect: unknown;\n    };\n    inactive: {};\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "active" | "inactive"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    active: Machine.Definition.StateNode<{\n        initial: "active";\n        states: {\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n            inactive: {};\n        };\n    }, ["states", "active"]>;\n    inactive: Machine.Definition.StateNode<{\n        initial: "active";\n        states: {\n            ...;\n        };\n    }, [...]>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active", "on"], {\n    TOGGLE: "inactive";\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "active" | "inactive" | A.InferNarrowestObject<{\n    target: "active" | "inactive";\n    guard?: ((parameter: {\n        context: undefined;\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "active", "effect"], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var send: Machine.Send<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}>'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: {\n    type: "$$initial";\n}'},"event")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var context: undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"Just entered the Active state"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"return"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"()"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"Just Left the Active state"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    initial: "active";\n    states: {\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n        inactive: {};\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("p",null,"The effect function receives an object as parameter with four keys:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"send"),': Takes an event as argument, provided in shorthand string format (e.g. "TOGGLE") or as an event object (e.g. ',(0,o.kt)("inlineCode",{parentName:"li"},'{ type: "TOGGLE" }'),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setContext"),": Takes an updater function as parameter to set a new context (more on context below). Returns an object with ",(0,o.kt)("inlineCode",{parentName:"li"},"send"),", so you can set the context and send an event on a single line."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"event"),": The event that triggered a transition to this state. (The event parameter always uses the object format (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"{ type: 'TOGGLE' }"),").)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"context")," The context at the time the effect runs.")),(0,o.kt)("p",null,'In this example, the state machine will always send the "RETRY" event when entering the error state:'),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"typescript"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"state"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},"useStateMachine"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  initial"),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'loading'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  states"),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#C2C3C5"}},"/* Other states here... */")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    error"),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      on"),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        RETRY"),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'load'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},"effect"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ send }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'RETRY'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"typescript"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"state"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},"useStateMachine"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"initial"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"loading"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"states"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#616E88"}},"/* Other states here... */")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"error"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"on"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"RETRY"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"load"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},"effect"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},"send"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"RETRY"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("h2",{id:"extended-state-context"},"Extended state (context)"),(0,o.kt)("p",null,"Besides the finite number of states, the state machine can have extended state (known as context)."),(0,o.kt)("p",null,"You can provide the initial context value in the state machine definition, then use the ",(0,o.kt)("inlineCode",{parentName:"p"},"setContext")," function within your effects to change the context:"),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, {\n    inactive: {\n        on: {\n            TOGGLE: "active";\n        };\n    };\n    active: {\n        ...;\n    };\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: unknown"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, ["states", "inactive"]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "inactive", "on"], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active", "on"], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active", "effect"], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"setContext")," }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"+"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"1"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }));")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state"),"); "),(0,o.kt)("span",{parentName:"div",style:{color:"#C2C3C5"}},"// { context: { toggleCount: 0 }, value: 'inactive', nextEvents: ['TOGGLE'] }")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: (sendable: "TOGGLE") => void (+1 overload)'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'TOGGLE'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},");")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state"),"); "),(0,o.kt)("span",{parentName:"div",style:{color:"#C2C3C5"}},"// { context: { toggleCount: 1 }, value: 'active', nextEvents: ['TOGGLE'] }"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, {\n    inactive: {\n        on: {\n            TOGGLE: "active";\n        };\n    };\n    active: {\n        ...;\n    };\n}, undefined, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: unknown"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, ["states", "inactive"]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "inactive"]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "inactive", "on"], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active"]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active", "on"], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, ["states", "active", "effect"], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"+"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"1"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"))"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#616E88"}},"// { context: { toggleCount: 0 }, value: 'inactive', nextEvents: ['TOGGLE'] }")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: (sendable: "TOGGLE") => void (+1 overload)'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"TOGGLE"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var console: Console"},"console")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(method) Console.log(...data: any[]): void"},"log")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#616E88"}},"// { context: { toggleCount: 1 }, value: 'active', nextEvents: ['TOGGLE'] }")))))),(0,o.kt)("h2",{id:"schema-context--event-typing"},"Schema: Context & Event Typing"),(0,o.kt)("p",null,"TypeScript will automatically infer your context type; event types are generated automatically."),(0,o.kt)("p",null,"Still, there are situations where you might want explicit control over the ",(0,o.kt)("inlineCode",{parentName:"p"},"context")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," types: You can provide you own typing using the ",(0,o.kt)("inlineCode",{parentName:"p"},"t")," whithin ",(0,o.kt)("inlineCode",{parentName:"p"},"schema"),":"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Typed Context example")),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"import"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) const useStateMachine: UseStateMachine\nimport useStateMachine"},"useStateMachine"),", {",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) const t: <T extends unknown>() => {\n    [$$t]: T;\n}\nimport t"},"t"),"} "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"from"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'@cassiozen/usestatemachine'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        schema: {\n            context: {\n                [$$t]: {\n                    toggleCount: number;\n                };\n            };\n        };\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                ...;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, {\n    ...;\n}, {\n    ...;\n}, true>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) schema?: A.InferNarrowestObject<Machine.Definition.Schema<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, undefined>> | undefined'},"schema")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: A.InferNarrowestObject<{\n    [$$t]: {\n        toggleCount: number;\n    };\n}> | undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    toggleCount: number;\n}>(): {\n    [$$t]: {\n        toggleCount: number;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"<{ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }>()")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context: A.InferNarrowestObject<{\n    toggleCount: number;\n}>"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        schema: {\n            context: {\n                [$$t]: {\n                    toggleCount: number;\n                };\n            };\n        };\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, [...]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'active'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," { ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'inactive'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"setContext")," }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},".",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"+"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"1"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }));")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"import"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) const useStateMachine: UseStateMachine\nimport useStateMachine"},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) const t: <T extends unknown>() => {\n    [$$t]: T;\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"from"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"@cassiozen/usestatemachine"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const state: {\n    value: "inactive";\n    context: {\n        toggleCount: number;\n    };\n    event: Machine.EntryEventForStateValue<{\n        schema: {\n            context: {\n                [$$t]: {\n                    toggleCount: number;\n                };\n            };\n        };\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                ...;\n            };\n        };\n    }, "inactive">;\n    nextEventsT: "TOGGLE"[];\n    nextEvents: "TOGGLE"[];\n} | {\n    ...;\n}'},"state")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, {\n    ...;\n}, {\n    ...;\n}, true>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) schema?: A.InferNarrowestObject<Machine.Definition.Schema<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, undefined>> | undefined'},"schema")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: A.InferNarrowestObject<{\n    [$$t]: {\n        toggleCount: number;\n    };\n}> | undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    toggleCount: number;\n}>(): {\n    [$$t]: {\n        toggleCount: number;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"<{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#8FBCBB"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"()")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context: A.InferNarrowestObject<{\n    toggleCount: number;\n}>"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "inactive" | "active"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    inactive: Machine.Definition.StateNode<{\n        schema: {\n            context: {\n                [$$t]: {\n                    toggleCount: number;\n                };\n            };\n        };\n        context: {\n            toggleCount: number;\n        };\n        initial: "inactive";\n        states: {\n            inactive: {\n                on: {\n                    TOGGLE: "active";\n                };\n            };\n            active: {\n                on: {\n                    TOGGLE: "inactive";\n                };\n                effect: unknown;\n            };\n        };\n    }, [...]>;\n    active: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) inactive: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...]>>'},"inactive")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"active"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) active: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...]>>'},"active")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], {\n    ...;\n}, {}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) TOGGLE: "inactive" | "active" | A.InferNarrowestObject<{\n    target: "inactive" | "active";\n    guard?: ((parameter: {\n        context: {\n            toggleCount: number;\n        };\n        event: {\n            type: "TOGGLE";\n        };\n    }) => boolean) | undefined;\n}>'},"TOGGLE")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"inactive"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}, [...], "active"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    schema: {\n        context: {\n            [$$t]: {\n                toggleCount: number;\n            };\n        };\n    };\n    context: {\n        toggleCount: number;\n    };\n    initial: "inactive";\n    states: {\n        inactive: {\n            on: {\n                TOGGLE: "active";\n            };\n        };\n        active: {\n            on: {\n                TOGGLE: "inactive";\n            };\n            effect: unknown;\n        };\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) context: {\n    toggleCount: number;\n}"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"."),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) toggleCount: number"},"toggleCount")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"+"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"1"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"))"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")))))),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Typed Events")),(0,o.kt)("p",null,"All events are type-infered by default, both in the string notation (",(0,o.kt)("inlineCode",{parentName:"p"},'send("UPDATE")'),") and the object notation (",(0,o.kt)("inlineCode",{parentName:"p"},'send({ type: "UPDATE"})'),"). "),(0,o.kt)("p",null,"If you want, though, you can augment an already typed event to include arbitrary data (which can be useful to provide values to be used inside effects or to update the context). Example:"),(0,o.kt)("div",{className:"shiki-twoslash-fragment"},(0,o.kt)("pre",{parentName:"div",className:"shiki min-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292eff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ["),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const machine: {\n    value: "waiting";\n    context: {\n        timeout?: number | undefined;\n    };\n    event: {\n        type: "$$initial";\n    };\n    nextEventsT: "PING"[];\n    nextEvents: "PING"[];\n} | {\n    value: "pinged";\n    context: {\n        timeout?: number | undefined;\n    };\n    event: O.ShallowClean<...>;\n    nextEventsT: never[];\n    nextEvents: "PING"[];\n}'},"machine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            on: {\n                ...;\n            };\n        };\n        pinged: unknown;\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"] "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            on: {\n                ...;\n            };\n        };\n        pinged: unknown;\n    };\n}, {\n    ...;\n}, {\n    ...;\n}, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) schema?: A.InferNarrowestObject<Machine.Definition.Schema<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, {\n    ...;\n}>> | undefined'},"schema")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: A.InferNarrowestObject<{\n    [$$t]: {\n        timeout?: number | undefined;\n    };\n}> | undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    timeout?: number | undefined;\n}>(): {\n    [$$t]: {\n        timeout?: number | undefined;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"<{ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"?:"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }>(),")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) events?: A.InferNarrowestObject<{\n    PING: {\n        [$$t]: {\n            value: number;\n        };\n    };\n}> | undefined"},"events")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) PING: A.InferNarrowestObject<{\n    [$$t]: {\n        value: number;\n    };\n}>"},"PING")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    value: number;\n}>(): {\n    [$$t]: {\n        value: number;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"<{ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }>()")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context: A.InferNarrowestObject<{\n    timeout?: number | undefined;\n}>"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "waiting" | "pinged"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'waiting'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    waiting: Machine.Definition.StateNode<{\n        schema: {\n            context: {\n                [$$t]: {\n                    timeout?: number | undefined;\n                };\n            };\n            events: {\n                PING: {\n                    [$$t]: {\n                        value: number;\n                    };\n                };\n            };\n        };\n        context: {\n            timeout: undefined;\n        };\n        initial: "waiting";\n        states: {\n            ...;\n        };\n    }, [...]>;\n    pinged: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) waiting: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...]>>'},"waiting")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) PING: "waiting" | "pinged" | A.InferNarrowestObject<{\n    target: "waiting" | "pinged";\n    guard?: ((parameter: {\n        context: {\n            timeout?: number | undefined;\n        };\n        event: O.ShallowClean<{\n            type: "PING";\n        } & {\n            value: number;\n        }>;\n    }) => boolean) | undefined;\n}>'},"PING")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'pinged'")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) pinged: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...]>>'},"pinged")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], "pinged"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}>'},"setContext"),", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>'},"event")," }) {")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"(",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) c: {\n    timeout?: number | undefined;\n}"},"c")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," ({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>'},"event")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"?.",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},"??"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," }));")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"      },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"    }")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"  },")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"});")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#6F42C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: (sendable: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>) => void (+1 overload)'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},"({ ",(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) type: "PING"'},"type")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#22863A"}},"'PING'"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}},", ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,o.kt)("span",{parentName:"div",style:{color:"#D32F2F"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#1976D2"}},"150"),(0,o.kt)("span",{parentName:"div",style:{color:"#24292EFF"}}," })"))))),(0,o.kt)("pre",{parentName:"div",className:"shiki nord twoslash lsp",style:{backgroundColor:"#2e3440ff",color:"#d8dee9ff"}},(0,o.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,o.kt)("div",{parentName:"pre",className:"code-container"},(0,o.kt)("code",{parentName:"div"},(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"const"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"["),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const machine: {\n    value: "waiting";\n    context: {\n        timeout?: number | undefined;\n    };\n    event: {\n        type: "$$initial";\n    };\n    nextEventsT: "PING"[];\n    nextEvents: "PING"[];\n} | {\n    value: "pinged";\n    context: {\n        timeout?: number | undefined;\n    };\n    event: O.ShallowClean<...>;\n    nextEventsT: never[];\n    nextEvents: "PING"[];\n}'},"machine")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: Machine.Send<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            on: {\n                ...;\n            };\n        };\n        pinged: unknown;\n    };\n}>'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"]"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"="),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(alias) useStateMachine<Machine.Definition<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            on: {\n                ...;\n            };\n        };\n        pinged: unknown;\n    };\n}, {\n    ...;\n}, {\n    ...;\n}, false>>(definition: A.InferNarrowestObject<...>): [state: ...]\nimport useStateMachine'},"useStateMachine")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) schema?: A.InferNarrowestObject<Machine.Definition.Schema<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, {\n    ...;\n}>> | undefined'},"schema")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context?: A.InferNarrowestObject<{\n    [$$t]: {\n        timeout?: number | undefined;\n    };\n}> | undefined"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    timeout?: number | undefined;\n}>(): {\n    [$$t]: {\n        timeout?: number | undefined;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"<{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"?:"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#8FBCBB"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"()"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) events?: A.InferNarrowestObject<{\n    PING: {\n        [$$t]: {\n            value: number;\n        };\n    };\n}> | undefined"},"events")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) PING: A.InferNarrowestObject<{\n    [$$t]: {\n        value: number;\n    };\n}>"},"PING")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(alias) t<{\n    value: number;\n}>(): {\n    [$$t]: {\n        value: number;\n    };\n}\nimport t"},"t")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"<{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ",(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#8FBCBB"}},"number"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"()")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) context: A.InferNarrowestObject<{\n    timeout?: number | undefined;\n}>"},"context")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) initial: "waiting" | "pinged"'},"initial")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"waiting"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},",")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) states: A.InferNarrowestObject<{\n    waiting: Machine.Definition.StateNode<{\n        schema: {\n            context: {\n                [$$t]: {\n                    timeout?: number | undefined;\n                };\n            };\n            events: {\n                PING: {\n                    [$$t]: {\n                        value: number;\n                    };\n                };\n            };\n        };\n        context: {\n            timeout: undefined;\n        };\n        initial: "waiting";\n        states: {\n            ...;\n        };\n    }, [...]>;\n    pinged: Machine.Definition.StateNode<...>;\n}>'},"states")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) waiting: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...]>>'},"waiting")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) on?: A.InferNarrowestObject<Machine.Definition.On<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], {\n    ...;\n}, {\n    ...;\n}, string>> | undefined'},"on")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) PING: "waiting" | "pinged" | A.InferNarrowestObject<{\n    target: "waiting" | "pinged";\n    guard?: ((parameter: {\n        context: {\n            timeout?: number | undefined;\n        };\n        event: O.ShallowClean<{\n            type: "PING";\n        } & {\n            value: number;\n        }>;\n    }) => boolean) | undefined;\n}>'},"PING")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"pinged"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) pinged: A.InferNarrowestObject<Machine.Definition.StateNode<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...]>>'},"pinged")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) effect?: Machine.Definition.Effect<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}, [...], "pinged"> | undefined'},"effect")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"({"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: Machine.SetContext<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}>'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>'},"event")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"})"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"        "),(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var setContext: (contextUpdater: Machine.ContextUpdater<{\n    schema: {\n        context: {\n            [$$t]: {\n                timeout?: number | undefined;\n            };\n        };\n        events: {\n            PING: {\n                [$$t]: {\n                    value: number;\n                };\n            };\n        };\n    };\n    context: {\n        timeout: undefined;\n    };\n    initial: "waiting";\n    states: {\n        waiting: {\n            ...;\n        };\n        pinged: unknown;\n    };\n}>) => {\n    ...;\n}'},"setContext")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(parameter) c: {\n    timeout?: number | undefined;\n}"},"c")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"=>"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," ("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) timeout?: number | undefined"},"timeout")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'var event: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>'},"event")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"?."),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},"??"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"0"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"))"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"      "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"    "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"  "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"},")),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")"),(0,o.kt)("span",{parentName:"div",style:{color:"#81A1C1"}},";")),(0,o.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,o.kt)("div",{parentName:"code",className:"line"},(0,o.kt)("span",{parentName:"div",style:{color:"#88C0D0"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'const send: (sendable: O.ShallowClean<{\n    type: "PING";\n} & {\n    value: number;\n}>) => void (+1 overload)'},"send")),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},"("),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"{"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:'(property) type: "PING"'},"type")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#A3BE8C"}},"PING"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"'"),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},","),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9"}},(0,o.kt)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},":"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#B48EAD"}},"150"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}}," "),(0,o.kt)("span",{parentName:"div",style:{color:"#ECEFF4"}},"}"),(0,o.kt)("span",{parentName:"div",style:{color:"#D8DEE9FF"}},")")))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note")," that you don't need to declare all your events in the schema, only the ones you're adding arbitrary keys and values."))}m.isMDXComponent=!0}}]);